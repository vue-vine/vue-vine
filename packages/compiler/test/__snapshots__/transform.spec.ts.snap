// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`transform vcf containing await > do not need result 1`] = `
"import {
  openBlock as _openBlock,
  createElementBlock as _createElementBlock,
  defineComponent as _defineComponent
} from 'vue'



export const App = (() => {

/* No hoisted */

  const __vine = _defineComponent({
    name: 'App',
    /* No props */
    /* No emits */
    async setup(__props /* No setup ctx destructuring */) {

const props = __props




const p = () => new Promise(resolve => setTimeout(resolve))
;(
  ([__temp,__restore] = _withAsyncContext(() => p())),
  await __temp,
  __restore()
)

/* No expose */

return (_ctx: any,_cache: any) => {
  return (_openBlock(), _createElementBlock(\\"div\\", null, \\"test\\"))
}

    }, // End of setup function
  }) // End of component object



  
  return __vine /* End of App */
})()"
`;

exports[`transform vcf containing await > need result 1`] = `
"import {
  openBlock as _openBlock,
  createElementBlock as _createElementBlock,
  defineComponent as _defineComponent
} from 'vue'



export const App = (() => {

/* No hoisted */

  const __vine = _defineComponent({
    name: 'App',
    /* No props */
    /* No emits */
    async setup(__props /* No setup ctx destructuring */) {

const props = __props




const p = () => new Promise(resolve => setTimeout(resolve))
const res = (
  ([__temp,__restore] = _withAsyncContext(() => p())),
  __temp = await __temp,
  __restore(),
  __temp
)

/* No expose */

return (_ctx: any,_cache: any) => {
  return (_openBlock(), _createElementBlock(\\"div\\", null, \\"test\\"))
}

    }, // End of setup function
  }) // End of component object



  
  return __vine /* End of App */
})()"
`;

exports[`transform vcf containing valid top level declaration > should know top level declared names as LITERAL_CONST 1`] = `
"import {
  toDisplayString as _toDisplayString,
  openBlock as _openBlock,
  createElementBlock as _createElementBlock,
  defineComponent as _defineComponent
} from 'vue'


const foo = 'foo'
const bar = () => 'lorem'

export const App = (() => {

/* No hoisted */

  const __vine = _defineComponent({
    name: 'App',
    /* No props */
    /* No emits */
    setup(__props /* No setup ctx destructuring */) {

const props = __props




console.log(foo, bar())

/* No expose */

return (_ctx: any,_cache: any) => {
  return (_openBlock(), _createElementBlock(\\"div\\", null, _toDisplayString(foo) + \\" \\" + _toDisplayString(bar()), 1 /* TEXT */))
}

    }, // End of setup function
  }) // End of component object



  
  return __vine /* End of App */
})()"
`;

exports[`trasnform vcf props binding should be recongnized > anything you want to check 2`] = `
"import {
  toDisplayString as _toDisplayString,
  openBlock as _openBlock,
  createElementBlock as _createElementBlock,
  defineComponent as _defineComponent,
  toRefs as _toRefs
} from 'vue'


import { useDefaults as _useDefaults } from \\"vue-vine\\"

const Component = (() => {

/* No hoisted */

  const __vine = _defineComponent({
    name: 'Component',
    props: {
      color: { required: true },
    },
    /* No emits */
    setup(__props /* No setup ctx destructuring */) {

const props = _useDefaults(__props, {
  color: 'red'
})

const { color } = _toRefs(props)





/* No expose */

return (_ctx: any,_cache: any) => {
  return (_openBlock(), _createElementBlock(\\"div\\", null, _toDisplayString(__props.color), 1 /* TEXT */))
}

    }, // End of setup function
  }) // End of component object



  
  return __vine /* End of Component */
})()"
`;
