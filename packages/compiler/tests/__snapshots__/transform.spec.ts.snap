// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`test transform > hmrId should be generated If there is no style 1`] = `
"import {
  createElementVNode as _createElementVNode,
  openBlock as _openBlock,
  createElementBlock as _createElementBlock,
  pushScopeId as _pushScopeId,
  popScopeId as _popScopeId,
  defineComponent as _defineComponent,
  useCssVars as _useCssVars,
  unref as _unref,
} from "vue";

export const About = (() => {
  const _withScopeId = (n) => (
    _pushScopeId("data-v-ba945b60"), (n = n()), _popScopeId(), n
  );
  const _hoisted_1 = /*#__PURE__*/ _withScopeId(() =>
    /*#__PURE__*/ _createElementVNode(
      "h2",
      null,
      "About page",
      -1 /* HOISTED */,
    ),
  );
  const _hoisted_2 = [_hoisted_1];
  const __vine = _defineComponent({
    name: "About",
    /* No props */
    /* No emits */
    setup(__props, { expose: __expose }) {
      __expose();
      const props = __props;

      return (_ctx, _cache) => {
        return _openBlock(), _createElementBlock("div", null, _hoisted_2);
      };
    },
  });

  __vine.__hmrId = "ba945b60";

  return __vine;
})();

typeof __VUE_HMR_RUNTIME__ !== "undefined" &&
  __VUE_HMR_RUNTIME__.createRecord(About.__hmrId, About);
export const _rerender_only = false;
export const _rerender_vcf_fn_name = "";
import.meta.hot?.accept((mod) => {
  if (!mod) {
    return;
  }
  const { _rerender_only, _rerender_vcf_fn_name } = mod;
  if (!_rerender_vcf_fn_name) {
    return;
  }
  const component = mod[_rerender_vcf_fn_name];
  if (_rerender_only) {
    __VUE_HMR_RUNTIME__.rerender(component.__hmrId, component.render);
  } else {
    __VUE_HMR_RUNTIME__.reload(component.__hmrId, component);
  }
});
"
`;

exports[`test transform > inline mode output result 1`] = `
"import { useDefaults as _useDefaults } from "vue-vine";
import {
  toDisplayString as _toDisplayString,
  createElementVNode as _createElementVNode,
  createTextVNode as _createTextVNode,
  vShow as _vShow,
  withDirectives as _withDirectives,
  openBlock as _openBlock,
  createElementBlock as _createElementBlock,
  pushScopeId as _pushScopeId,
  popScopeId as _popScopeId,
  defineComponent as _defineComponent,
  useCssVars as _useCssVars,
  unref as _unref,
  useSlots as _useSlots,
  useModel as _useModel,
  toRefs as _toRefs,
  createVNode as _createVNode,
} from "vue";

import "testTransformInlineResult?type=vine-style&scopeId=3921d7bd&comp=MyProfile&lang=css&index=0&virtual.css";
import "testTransformInlineResult?type=vine-style&scopeId=3921d7bd&comp=MyProfile&lang=css&scoped=true&index=1&virtual.css";
import "testTransformInlineResult?type=vine-style&scopeId=9c121b96&comp=MyApp&lang=css&scoped=true&index=0&virtual.css";

import { ref } from "vue";
import someDefaultExport from "some-module-1";
import { someNamedExport } from "some-module-2";
import * as someNamespaceExport from "some-module-3";
import type { SomeType } from "some-module-4";
import { someExternalFunction1, someExternalFunction2 } from "some-module-4";

const v1: SomeType = someExternalFunction1({ a: 1, b: 2 });
const v2 = ref(0);

someExternalFunction2();

export const MyProfile = (() => {
  const _withScopeId = (n) => (
    _pushScopeId("data-v-3921d7bd"), (n = n()), _popScopeId(), n
  );
  const _hoisted_1 = { class: "my-profile" };
  const __vine = _defineComponent({
    name: "MyProfile",
    props: {
      name: { required: true },
      age: { required: true },
      bio: {
        /* Simple prop */
      },
      modelValue: { default: "test" },
      modelModifiers: {},
      title: { default: "" },
      titleModifiers: {},
      count: {},
      countModifiers: {},
    },
    emits: [
      "somethingChange",
      "update:modelValue",
      "update:title",
      "update:count",
    ],
    setup(__props, { emit: __emit, expose: __expose }) {
      const props = _useDefaults(__props, {
        age: 18,
      });
      const { name, age, bio } = _toRefs(props);

      _useCssVars((_ctx) => ({
        "601ae0ef": textColor.value,
      }));

      const defaultModelWithValue = _useModel(__props, "modelValue");
      const title = _useModel(__props, "title");
      const count = _useModel(__props, "count");
      const mySlots = _useSlots();
      const emits = __emit;

      const textColor = ref("#1c1c1c");
      const handleRefresh = () => {
        // ...
      };

      __expose({
        age,
        bio,
      });

      return (_ctx, _cache) => {
        return (
          _openBlock(),
          _createElementBlock("div", _hoisted_1, [
            _createElementVNode("div", null, [
              _createTextVNode(_toDisplayString(name.value), 1 /* TEXT */),
              _createElementVNode(
                "span",
                null,
                " - " + _toDisplayString(age.value),
                1 /* TEXT */,
              ),
            ]),
            _withDirectives(
              _createElementVNode(
                "p",
                { class: "bio" },
                _toDisplayString(bio.value),
                513 /* TEXT, NEED_PATCH */,
              ),
              [[_vShow, bio.value]],
            ),
            _createElementVNode(
              "button",
              { onClick: handleRefresh },
              "Refresh",
            ),
          ])
        );
      };
    },
  });

  __vine.__scopeId = "data-v-3921d7bd";
  __vine.__hmrId = "3921d7bd";

  return __vine;
})();

export const MyApp = (() => {
  const _withScopeId = (n) => (
    _pushScopeId("data-v-9c121b96"), (n = n()), _popScopeId(), n
  );
  const _hoisted_1 = { class: "my-app" };
  const _hoisted_2 = /*#__PURE__*/ _withScopeId(() =>
    /*#__PURE__*/ _createElementVNode(
      "h2",
      null,
      "Hello world",
      -1 /* HOISTED */,
    ),
  );
  const __vine = _defineComponent({
    name: "MyApp",
    /* No props */
    /* No emits */
    async setup(__props, { expose: __expose }) {
      __expose();
      let __temp, __restore;
      const props = __props;
      const data =
        (([__temp, __restore] = _withAsyncContext(() =>
          fetch("https://api.sampleapis.com/futurama/characters"),
        )),
        (__temp = await __temp),
        __restore(),
        __temp);

      return (_ctx, _cache) => {
        return (
          _openBlock(),
          _createElementBlock("div", _hoisted_1, [
            _hoisted_2,
            _createVNode(MyProfile, {
              name: "Tomy",
              age: 24,
            }),
          ])
        );
      };
    },
  });

  __vine.__scopeId = "data-v-9c121b96";
  __vine.__hmrId = "9c121b96";

  return __vine;
})();

typeof __VUE_HMR_RUNTIME__ !== "undefined" &&
  __VUE_HMR_RUNTIME__.createRecord(MyProfile.__hmrId, MyProfile);

export default MyApp;

typeof __VUE_HMR_RUNTIME__ !== "undefined" &&
  __VUE_HMR_RUNTIME__.createRecord(MyApp.__hmrId, MyApp);
export const _rerender_only = false;
export const _rerender_vcf_fn_name = "";
import.meta.hot?.accept((mod) => {
  if (!mod) {
    return;
  }
  const { _rerender_only, _rerender_vcf_fn_name } = mod;
  if (!_rerender_vcf_fn_name) {
    return;
  }
  const component = mod[_rerender_vcf_fn_name];
  if (_rerender_only) {
    __VUE_HMR_RUNTIME__.rerender(component.__hmrId, component.render);
  } else {
    __VUE_HMR_RUNTIME__.reload(component.__hmrId, component);
  }
});
"
`;

exports[`test transform > not output HMR content in non-dev mode 1`] = `
"import { useDefaults as _useDefaults } from "vue-vine";
import {
  toDisplayString as _toDisplayString,
  createElementVNode as _createElementVNode,
  createTextVNode as _createTextVNode,
  vShow as _vShow,
  withDirectives as _withDirectives,
  openBlock as _openBlock,
  createElementBlock as _createElementBlock,
  pushScopeId as _pushScopeId,
  popScopeId as _popScopeId,
  defineComponent as _defineComponent,
  useCssVars as _useCssVars,
  unref as _unref,
  useSlots as _useSlots,
  useModel as _useModel,
  toRefs as _toRefs,
  createVNode as _createVNode,
} from "vue";

import "testNoHMRContentOnProduction?type=vine-style&scopeId=3b48c990&comp=MyProfile&lang=css&index=0&virtual.css";
import "testNoHMRContentOnProduction?type=vine-style&scopeId=3b48c990&comp=MyProfile&lang=css&scoped=true&index=1&virtual.css";
import "testNoHMRContentOnProduction?type=vine-style&scopeId=c5a474f0&comp=MyApp&lang=css&scoped=true&index=0&virtual.css";

import { ref } from "vue";
import someDefaultExport from "some-module-1";
import { someNamedExport } from "some-module-2";
import * as someNamespaceExport from "some-module-3";
import type { SomeType } from "some-module-4";
import { someExternalFunction1, someExternalFunction2 } from "some-module-4";

const v1: SomeType = someExternalFunction1({ a: 1, b: 2 });
const v2 = ref(0);

someExternalFunction2();

export const MyProfile = (() => {
  const _withScopeId = (n) => (
    _pushScopeId("data-v-3b48c990"), (n = n()), _popScopeId(), n
  );
  const _hoisted_1 = { class: "my-profile" };
  const __vine = _defineComponent({
    name: "MyProfile",
    props: {
      name: { required: true },
      age: { required: true },
      bio: {
        /* Simple prop */
      },
      modelValue: { default: "test" },
      modelModifiers: {},
      title: { default: "" },
      titleModifiers: {},
      count: {},
      countModifiers: {},
    },
    emits: [
      "somethingChange",
      "update:modelValue",
      "update:title",
      "update:count",
    ],
    setup(__props, { emit: __emit, expose: __expose }) {
      const props = _useDefaults(__props, {
        age: 18,
      });
      const { name, age, bio } = _toRefs(props);

      _useCssVars((_ctx) => ({
        "601ae0ef": textColor.value,
      }));

      const defaultModelWithValue = _useModel(__props, "modelValue");
      const title = _useModel(__props, "title");
      const count = _useModel(__props, "count");
      const mySlots = _useSlots();
      const emits = __emit;

      const textColor = ref("#1c1c1c");
      const handleRefresh = () => {
        // ...
      };

      __expose({
        age,
        bio,
      });

      return (_ctx, _cache) => {
        return (
          _openBlock(),
          _createElementBlock("div", _hoisted_1, [
            _createElementVNode("div", null, [
              _createTextVNode(_toDisplayString(name.value), 1 /* TEXT */),
              _createElementVNode(
                "span",
                null,
                " - " + _toDisplayString(age.value),
                1 /* TEXT */,
              ),
            ]),
            _withDirectives(
              _createElementVNode(
                "p",
                { class: "bio" },
                _toDisplayString(bio.value),
                513 /* TEXT, NEED_PATCH */,
              ),
              [[_vShow, bio.value]],
            ),
            _createElementVNode(
              "button",
              { onClick: handleRefresh },
              "Refresh",
            ),
          ])
        );
      };
    },
  });

  __vine.__scopeId = "data-v-3b48c990";

  return __vine;
})();

export const MyApp = (() => {
  const _withScopeId = (n) => (
    _pushScopeId("data-v-c5a474f0"), (n = n()), _popScopeId(), n
  );
  const _hoisted_1 = { class: "my-app" };
  const _hoisted_2 = /*#__PURE__*/ _withScopeId(() =>
    /*#__PURE__*/ _createElementVNode(
      "h2",
      null,
      "Hello world",
      -1 /* HOISTED */,
    ),
  );
  const __vine = _defineComponent({
    name: "MyApp",
    /* No props */
    /* No emits */
    async setup(__props, { expose: __expose }) {
      __expose();
      let __temp, __restore;
      const props = __props;
      const data =
        (([__temp, __restore] = _withAsyncContext(() =>
          fetch("https://api.sampleapis.com/futurama/characters"),
        )),
        (__temp = await __temp),
        __restore(),
        __temp);

      return (_ctx, _cache) => {
        return (
          _openBlock(),
          _createElementBlock("div", _hoisted_1, [
            _hoisted_2,
            _createVNode(MyProfile, {
              name: "Tomy",
              age: 24,
            }),
          ])
        );
      };
    },
  });

  __vine.__scopeId = "data-v-c5a474f0";

  return __vine;
})();

export default MyApp;
"
`;

exports[`test transform > separated mode output result 1`] = `
"import { useDefaults as _useDefaults } from "vue-vine";
import {
  toDisplayString as _toDisplayString,
  createElementVNode as _createElementVNode,
  createTextVNode as _createTextVNode,
  vShow as _vShow,
  withDirectives as _withDirectives,
  openBlock as _openBlock,
  createElementBlock as _createElementBlock,
  pushScopeId as _pushScopeId,
  popScopeId as _popScopeId,
  defineComponent as _defineComponent,
  useCssVars as _useCssVars,
  useSlots as _useSlots,
  useModel as _useModel,
  toRefs as _toRefs,
  createVNode as _createVNode,
} from "vue";

import "testTransformSeparatedResult?type=vine-style&scopeId=25e4e706&comp=MyProfile&lang=css&index=0&virtual.css";
import "testTransformSeparatedResult?type=vine-style&scopeId=25e4e706&comp=MyProfile&lang=css&scoped=true&index=1&virtual.css";
import "testTransformSeparatedResult?type=vine-style&scopeId=b909f216&comp=MyApp&lang=css&scoped=true&index=0&virtual.css";

import { ref } from "vue";
import someDefaultExport from "some-module-1";
import { someNamedExport } from "some-module-2";
import * as someNamespaceExport from "some-module-3";
import type { SomeType } from "some-module-4";
import { someExternalFunction1, someExternalFunction2 } from "some-module-4";

const v1: SomeType = someExternalFunction1({ a: 1, b: 2 });
const v2 = ref(0);

someExternalFunction2();

export const MyProfile = (() => {
  const _withScopeId = (n) => (
    _pushScopeId("data-v-25e4e706"), (n = n()), _popScopeId(), n
  );
  const _hoisted_1 = { class: "my-profile" };
  const __vine = _defineComponent({
    name: "MyProfile",
    props: {
      name: { required: true },
      age: { required: true },
      bio: {
        /* Simple prop */
      },
      modelValue: { default: "test" },
      modelModifiers: {},
      title: { default: "" },
      titleModifiers: {},
      count: {},
      countModifiers: {},
    },
    emits: [
      "somethingChange",
      "update:modelValue",
      "update:title",
      "update:count",
    ],
    setup(__props, { emit: __emit, expose: __expose }) {
      const props = _useDefaults(__props, {
        age: 18,
      });
      const { name, age, bio } = _toRefs(props);

      _useCssVars((_ctx) => ({
        "601ae0ef": _ctx.textColor,
      }));

      const defaultModelWithValue = _useModel(__props, "modelValue");
      const title = _useModel(__props, "title");
      const count = _useModel(__props, "count");
      const mySlots = _useSlots();
      const emits = __emit;

      const textColor = ref("#1c1c1c");
      const handleRefresh = () => {
        // ...
      };

      __expose({
        age,
        bio,
      });

      return {
        name,
        age,
        bio,
        defaultModelWithValue,
        title,
        count,
        emits,
        textColor,
        handleRefresh,
        ref,
        someDefaultExport,
        someNamedExport,
        someNamespaceExport,
        someExternalFunction1,
        someExternalFunction2,
        v1,
        v2,
        MyProfile,
        MyApp,
      };
    },
  });
  function __sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
    return (
      _openBlock(),
      _createElementBlock("div", _hoisted_1, [
        _createElementVNode("div", null, [
          _createTextVNode(_toDisplayString($setup.name), 1 /* TEXT */),
          _createElementVNode(
            "span",
            null,
            " - " + _toDisplayString($setup.age),
            1 /* TEXT */,
          ),
        ]),
        _withDirectives(
          _createElementVNode(
            "p",
            { class: "bio" },
            _toDisplayString($setup.bio),
            513 /* TEXT, NEED_PATCH */,
          ),
          [[_vShow, $setup.bio]],
        ),
        _createElementVNode(
          "button",
          { onClick: $setup.handleRefresh },
          "Refresh",
        ),
      ])
    );
  }
  __vine.render = __sfc_render;
  __vine.__scopeId = "data-v-25e4e706";
  __vine.__hmrId = "25e4e706";

  return __vine;
})();

export const MyApp = (() => {
  const _withScopeId = (n) => (
    _pushScopeId("data-v-b909f216"), (n = n()), _popScopeId(), n
  );
  const _hoisted_1 = { class: "my-app" };
  const _hoisted_2 = /*#__PURE__*/ _withScopeId(() =>
    /*#__PURE__*/ _createElementVNode(
      "h2",
      null,
      "Hello world",
      -1 /* HOISTED */,
    ),
  );
  const __vine = _defineComponent({
    name: "MyApp",
    /* No props */
    /* No emits */
    async setup(__props, { expose: __expose }) {
      __expose();
      let __temp, __restore;
      const props = __props;
      const data =
        (([__temp, __restore] = _withAsyncContext(() =>
          fetch("https://api.sampleapis.com/futurama/characters"),
        )),
        (__temp = await __temp),
        __restore(),
        __temp);

      return {
        data,
        ref,
        someDefaultExport,
        someNamedExport,
        someNamespaceExport,
        someExternalFunction1,
        someExternalFunction2,
        v1,
        v2,
        MyProfile,
        MyApp,
      };
    },
  });
  function __sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
    return (
      _openBlock(),
      _createElementBlock("div", _hoisted_1, [
        _hoisted_2,
        _createVNode($setup["MyProfile"], {
          name: "Tomy",
          age: 24,
        }),
      ])
    );
  }
  __vine.render = __sfc_render;
  __vine.__scopeId = "data-v-b909f216";
  __vine.__hmrId = "b909f216";

  return __vine;
})();

typeof __VUE_HMR_RUNTIME__ !== "undefined" &&
  __VUE_HMR_RUNTIME__.createRecord(MyProfile.__hmrId, MyProfile);

export default MyApp;

typeof __VUE_HMR_RUNTIME__ !== "undefined" &&
  __VUE_HMR_RUNTIME__.createRecord(MyApp.__hmrId, MyApp);
export const _rerender_only = false;
export const _rerender_vcf_fn_name = "";
import.meta.hot?.accept((mod) => {
  if (!mod) {
    return;
  }
  const { _rerender_only, _rerender_vcf_fn_name } = mod;
  if (!_rerender_vcf_fn_name) {
    return;
  }
  const component = mod[_rerender_vcf_fn_name];
  if (_rerender_only) {
    __VUE_HMR_RUNTIME__.rerender(component.__hmrId, component.render);
  } else {
    __VUE_HMR_RUNTIME__.reload(component.__hmrId, component);
  }
});
"
`;

exports[`test transform > separated mode output result by ssr 1`] = `
"import { useDefaults as _useDefaults } from "vue-vine";
import {
  ssrRenderStyle as _ssrRenderStyle,
  ssrRenderAttrs as _ssrRenderAttrs,
  ssrInterpolate as _ssrInterpolate,
  ssrRenderComponent as _ssrRenderComponent,
} from "vue/server-renderer";
import {
  mergeProps as _mergeProps,
  defineComponent as _defineComponent,
  useCssVars as _useCssVars,
  useSlots as _useSlots,
  useModel as _useModel,
  toRefs as _toRefs,
} from "vue";

import "testTransformSeparatedResult?type=vine-style&scopeId=25e4e706&comp=MyProfile&lang=css&index=0&virtual.css";
import "testTransformSeparatedResult?type=vine-style&scopeId=25e4e706&comp=MyProfile&lang=css&scoped=true&index=1&virtual.css";
import "testTransformSeparatedResult?type=vine-style&scopeId=b909f216&comp=MyApp&lang=css&scoped=true&index=0&virtual.css";

import { ref } from "vue";
import someDefaultExport from "some-module-1";
import { someNamedExport } from "some-module-2";
import * as someNamespaceExport from "some-module-3";
import type { SomeType } from "some-module-4";
import { someExternalFunction1, someExternalFunction2 } from "some-module-4";

const v1: SomeType = someExternalFunction1({ a: 1, b: 2 });
const v2 = ref(0);

someExternalFunction2();

export const MyProfile = (() => {
  const __vine = _defineComponent({
    name: "MyProfile",
    props: {
      name: { required: true },
      age: { required: true },
      bio: {
        /* Simple prop */
      },
      modelValue: { default: "test" },
      modelModifiers: {},
      title: { default: "" },
      titleModifiers: {},
      count: {},
      countModifiers: {},
    },
    emits: [
      "somethingChange",
      "update:modelValue",
      "update:title",
      "update:count",
    ],
    setup(__props, { emit: __emit, expose: __expose }) {
      const props = _useDefaults(__props, {
        age: 18,
      });
      const { name, age, bio } = _toRefs(props);

      _useCssVars((_ctx) => ({
        "601ae0ef": _ctx.textColor,
      }));

      const defaultModelWithValue = _useModel(__props, "modelValue");
      const title = _useModel(__props, "title");
      const count = _useModel(__props, "count");
      const mySlots = _useSlots();
      const emits = __emit;

      const textColor = ref("#1c1c1c");
      const handleRefresh = () => {
        // ...
      };

      __expose({
        age,
        bio,
      });

      return {
        name,
        age,
        bio,
        defaultModelWithValue,
        title,
        count,
        emits,
        textColor,
        handleRefresh,
        ref,
        someDefaultExport,
        someNamedExport,
        someNamespaceExport,
        someExternalFunction1,
        someExternalFunction2,
        v1,
        v2,
        MyProfile,
        MyApp,
      };
    },
  });
  function __sfc_ssr_render(
    _ctx,
    _push,
    _parent,
    _attrs,
    $props,
    $setup,
    $data,
    $options,
  ) {
    _push(
      \`<div\${_ssrRenderAttrs(
        _mergeProps({ class: "my-profile" }, _attrs),
      )} data-v-25e4e706><div data-v-25e4e706>\${_ssrInterpolate(
        $setup.name,
      )}<span data-v-25e4e706> - \${_ssrInterpolate(
        $setup.age,
      )}</span></div><p class="bio" style="\${_ssrRenderStyle(
        $setup.bio ? null : { display: "none" },
      )}" data-v-25e4e706>\${_ssrInterpolate(
        $setup.bio,
      )}</p><button data-v-25e4e706>Refresh</button></div>\`,
    );
  }
  __vine.ssrRender = __sfc_ssr_render;
  __vine.__scopeId = "data-v-25e4e706";
  __vine.__hmrId = "25e4e706";

  return __vine;
})();

export const MyApp = (() => {
  const __vine = _defineComponent({
    name: "MyApp",
    /* No props */
    /* No emits */
    async setup(__props, { expose: __expose }) {
      __expose();
      let __temp, __restore;
      const props = __props;
      const data =
        (([__temp, __restore] = _withAsyncContext(() =>
          fetch("https://api.sampleapis.com/futurama/characters"),
        )),
        (__temp = await __temp),
        __restore(),
        __temp);

      return {
        data,
        ref,
        someDefaultExport,
        someNamedExport,
        someNamespaceExport,
        someExternalFunction1,
        someExternalFunction2,
        v1,
        v2,
        MyProfile,
        MyApp,
      };
    },
  });
  function __sfc_ssr_render(
    _ctx,
    _push,
    _parent,
    _attrs,
    $props,
    $setup,
    $data,
    $options,
  ) {
    _push(
      \`<div\${_ssrRenderAttrs(
        _mergeProps({ class: "my-app" }, _attrs),
      )} data-v-b909f216><h2 data-v-b909f216>Hello world</h2>\`,
    );
    _push(
      _ssrRenderComponent(
        $setup["MyProfile"],
        {
          name: "Tomy",
          age: 24,
        },
        null,
        _parent,
      ),
    );
    _push(\`</div>\`);
  }
  __vine.ssrRender = __sfc_ssr_render;
  __vine.__scopeId = "data-v-b909f216";
  __vine.__hmrId = "b909f216";

  return __vine;
})();

typeof __VUE_HMR_RUNTIME__ !== "undefined" &&
  __VUE_HMR_RUNTIME__.createRecord(MyProfile.__hmrId, MyProfile);

export default MyApp;

typeof __VUE_HMR_RUNTIME__ !== "undefined" &&
  __VUE_HMR_RUNTIME__.createRecord(MyApp.__hmrId, MyApp);
export const _rerender_only = false;
export const _rerender_vcf_fn_name = "";
import.meta.hot?.accept((mod) => {
  if (!mod) {
    return;
  }
  const { _rerender_only, _rerender_vcf_fn_name } = mod;
  if (!_rerender_vcf_fn_name) {
    return;
  }
  const component = mod[_rerender_vcf_fn_name];
  if (_rerender_only) {
    __VUE_HMR_RUNTIME__.rerender(component.__hmrId, component.render);
  } else {
    __VUE_HMR_RUNTIME__.reload(component.__hmrId, component);
  }
});
"
`;
